
8_pwm_1timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cdc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00000cdc  00000d70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000004a  00802000  00802000  00000d70  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d70  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d8  00000000  00000000  00000da0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000318f  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000780  00000000  00000000  00004107  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000253a  00000000  00000000  00004887  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000a30  00000000  00000000  00006dc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00022260  00000000  00000000  000077f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000017f5  00000000  00000000  00029a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000160  00000000  00000000  0002b249  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000805f  00000000  00000000  0002b3a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	bb c0       	rjmp	.+374    	; 0x178 <__ctors_end>
   2:	00 00       	nop
   4:	c9 c0       	rjmp	.+402    	; 0x198 <__bad_interrupt>
   6:	00 00       	nop
   8:	c7 c0       	rjmp	.+398    	; 0x198 <__bad_interrupt>
   a:	00 00       	nop
   c:	c5 c0       	rjmp	.+394    	; 0x198 <__bad_interrupt>
   e:	00 00       	nop
  10:	c3 c0       	rjmp	.+390    	; 0x198 <__bad_interrupt>
  12:	00 00       	nop
  14:	c1 c0       	rjmp	.+386    	; 0x198 <__bad_interrupt>
  16:	00 00       	nop
  18:	bf c0       	rjmp	.+382    	; 0x198 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	bd c0       	rjmp	.+378    	; 0x198 <__bad_interrupt>
  1e:	00 00       	nop
  20:	bb c0       	rjmp	.+374    	; 0x198 <__bad_interrupt>
  22:	00 00       	nop
  24:	b9 c0       	rjmp	.+370    	; 0x198 <__bad_interrupt>
  26:	00 00       	nop
  28:	b7 c0       	rjmp	.+366    	; 0x198 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	b5 c0       	rjmp	.+362    	; 0x198 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b3 c0       	rjmp	.+358    	; 0x198 <__bad_interrupt>
  32:	00 00       	nop
  34:	b1 c0       	rjmp	.+354    	; 0x198 <__bad_interrupt>
  36:	00 00       	nop
  38:	e0 c0       	rjmp	.+448    	; 0x1fa <__vector_14>
  3a:	00 00       	nop
  3c:	07 c1       	rjmp	.+526    	; 0x24c <__vector_15>
  3e:	00 00       	nop
  40:	2e c1       	rjmp	.+604    	; 0x29e <__vector_16>
  42:	00 00       	nop
  44:	55 c1       	rjmp	.+682    	; 0x2f0 <__vector_17>
  46:	00 00       	nop
  48:	7c c1       	rjmp	.+760    	; 0x342 <__vector_18>
  4a:	00 00       	nop
  4c:	a3 c1       	rjmp	.+838    	; 0x394 <__vector_19>
  4e:	00 00       	nop
  50:	ca c1       	rjmp	.+916    	; 0x3e6 <__vector_20>
  52:	00 00       	nop
  54:	f1 c1       	rjmp	.+994    	; 0x438 <__vector_21>
  56:	00 00       	nop
  58:	18 c2       	rjmp	.+1072   	; 0x48a <__vector_22>
  5a:	00 00       	nop
  5c:	3f c2       	rjmp	.+1150   	; 0x4dc <__vector_23>
  5e:	00 00       	nop
  60:	9b c0       	rjmp	.+310    	; 0x198 <__bad_interrupt>
  62:	00 00       	nop
  64:	99 c0       	rjmp	.+306    	; 0x198 <__bad_interrupt>
  66:	00 00       	nop
  68:	97 c0       	rjmp	.+302    	; 0x198 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	95 c0       	rjmp	.+298    	; 0x198 <__bad_interrupt>
  6e:	00 00       	nop
  70:	93 c0       	rjmp	.+294    	; 0x198 <__bad_interrupt>
  72:	00 00       	nop
  74:	91 c0       	rjmp	.+290    	; 0x198 <__bad_interrupt>
  76:	00 00       	nop
  78:	8f c0       	rjmp	.+286    	; 0x198 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	8d c0       	rjmp	.+282    	; 0x198 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8b c0       	rjmp	.+278    	; 0x198 <__bad_interrupt>
  82:	00 00       	nop
  84:	89 c0       	rjmp	.+274    	; 0x198 <__bad_interrupt>
  86:	00 00       	nop
  88:	87 c0       	rjmp	.+270    	; 0x198 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	85 c0       	rjmp	.+266    	; 0x198 <__bad_interrupt>
  8e:	00 00       	nop
  90:	83 c0       	rjmp	.+262    	; 0x198 <__bad_interrupt>
  92:	00 00       	nop
  94:	81 c0       	rjmp	.+258    	; 0x198 <__bad_interrupt>
  96:	00 00       	nop
  98:	7f c0       	rjmp	.+254    	; 0x198 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	7d c0       	rjmp	.+250    	; 0x198 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	7b c0       	rjmp	.+246    	; 0x198 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	79 c0       	rjmp	.+242    	; 0x198 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	77 c0       	rjmp	.+238    	; 0x198 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	75 c0       	rjmp	.+234    	; 0x198 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	73 c0       	rjmp	.+230    	; 0x198 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	71 c0       	rjmp	.+226    	; 0x198 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	6f c0       	rjmp	.+222    	; 0x198 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	d2 c3       	rjmp	.+1956   	; 0x862 <__vector_47>
  be:	00 00       	nop
  c0:	f9 c3       	rjmp	.+2034   	; 0x8b4 <__vector_48>
  c2:	00 00       	nop
  c4:	20 c4       	rjmp	.+2112   	; 0x906 <__vector_49>
  c6:	00 00       	nop
  c8:	47 c4       	rjmp	.+2190   	; 0x958 <__vector_50>
  ca:	00 00       	nop
  cc:	6e c4       	rjmp	.+2268   	; 0x9aa <__vector_51>
  ce:	00 00       	nop
  d0:	95 c4       	rjmp	.+2346   	; 0x9fc <__vector_52>
  d2:	00 00       	nop
  d4:	61 c0       	rjmp	.+194    	; 0x198 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	5f c0       	rjmp	.+190    	; 0x198 <__bad_interrupt>
  da:	00 00       	nop
  dc:	5d c0       	rjmp	.+186    	; 0x198 <__bad_interrupt>
  de:	00 00       	nop
  e0:	5b c0       	rjmp	.+182    	; 0x198 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	59 c0       	rjmp	.+178    	; 0x198 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	57 c0       	rjmp	.+174    	; 0x198 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	55 c0       	rjmp	.+170    	; 0x198 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	53 c0       	rjmp	.+166    	; 0x198 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	51 c0       	rjmp	.+162    	; 0x198 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	4f c0       	rjmp	.+158    	; 0x198 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	4d c0       	rjmp	.+154    	; 0x198 <__bad_interrupt>
  fe:	00 00       	nop
 100:	4b c0       	rjmp	.+150    	; 0x198 <__bad_interrupt>
 102:	00 00       	nop
 104:	49 c0       	rjmp	.+146    	; 0x198 <__bad_interrupt>
 106:	00 00       	nop
 108:	47 c0       	rjmp	.+142    	; 0x198 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	45 c0       	rjmp	.+138    	; 0x198 <__bad_interrupt>
 10e:	00 00       	nop
 110:	43 c0       	rjmp	.+134    	; 0x198 <__bad_interrupt>
 112:	00 00       	nop
 114:	41 c0       	rjmp	.+130    	; 0x198 <__bad_interrupt>
 116:	00 00       	nop
 118:	3f c0       	rjmp	.+126    	; 0x198 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	3d c0       	rjmp	.+122    	; 0x198 <__bad_interrupt>
 11e:	00 00       	nop
 120:	3b c0       	rjmp	.+118    	; 0x198 <__bad_interrupt>
 122:	00 00       	nop
 124:	39 c0       	rjmp	.+114    	; 0x198 <__bad_interrupt>
 126:	00 00       	nop
 128:	37 c0       	rjmp	.+110    	; 0x198 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	35 c0       	rjmp	.+106    	; 0x198 <__bad_interrupt>
 12e:	00 00       	nop
 130:	33 c0       	rjmp	.+102    	; 0x198 <__bad_interrupt>
 132:	00 00       	nop
 134:	fc c1       	rjmp	.+1016   	; 0x52e <__vector_77>
 136:	00 00       	nop
 138:	23 c2       	rjmp	.+1094   	; 0x580 <__vector_78>
 13a:	00 00       	nop
 13c:	4a c2       	rjmp	.+1172   	; 0x5d2 <__vector_79>
 13e:	00 00       	nop
 140:	71 c2       	rjmp	.+1250   	; 0x624 <__vector_80>
 142:	00 00       	nop
 144:	98 c2       	rjmp	.+1328   	; 0x676 <__vector_81>
 146:	00 00       	nop
 148:	bf c2       	rjmp	.+1406   	; 0x6c8 <__vector_82>
 14a:	00 00       	nop
 14c:	e6 c2       	rjmp	.+1484   	; 0x71a <__vector_83>
 14e:	00 00       	nop
 150:	0d c3       	rjmp	.+1562   	; 0x76c <__vector_84>
 152:	00 00       	nop
 154:	34 c3       	rjmp	.+1640   	; 0x7be <__vector_85>
 156:	00 00       	nop
 158:	5b c3       	rjmp	.+1718   	; 0x810 <__vector_86>
 15a:	00 00       	nop
 15c:	1d c0       	rjmp	.+58     	; 0x198 <__bad_interrupt>
 15e:	00 00       	nop
 160:	1b c0       	rjmp	.+54     	; 0x198 <__bad_interrupt>
 162:	00 00       	nop
 164:	19 c0       	rjmp	.+50     	; 0x198 <__bad_interrupt>
 166:	00 00       	nop
 168:	17 c0       	rjmp	.+46     	; 0x198 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	15 c0       	rjmp	.+42     	; 0x198 <__bad_interrupt>
 16e:	00 00       	nop
 170:	13 c0       	rjmp	.+38     	; 0x198 <__bad_interrupt>
 172:	00 00       	nop
 174:	11 c0       	rjmp	.+34     	; 0x198 <__bad_interrupt>
	...

00000178 <__ctors_end>:
 178:	11 24       	eor	r1, r1
 17a:	1f be       	out	0x3f, r1	; 63
 17c:	cf ef       	ldi	r28, 0xFF	; 255
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	df e2       	ldi	r29, 0x2F	; 47
 182:	de bf       	out	0x3e, r29	; 62

00000184 <__do_clear_bss>:
 184:	20 e2       	ldi	r18, 0x20	; 32
 186:	a0 e0       	ldi	r26, 0x00	; 0
 188:	b0 e2       	ldi	r27, 0x20	; 32
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	aa 34       	cpi	r26, 0x4A	; 74
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	42 d5       	rcall	.+2692   	; 0xc1a <main>
 196:	a0 c5       	rjmp	.+2880   	; 0xcd8 <_exit>

00000198 <__bad_interrupt>:
 198:	33 cf       	rjmp	.-410    	; 0x0 <__vectors>

0000019a <sysclk_init>:
#endif
	bool need_rc2mhz = false;

	/* Turn off all peripheral clocks that can be turned off. */
	for (i = 0; i <= SYSCLK_PORT_F; i++) {
		*(reg++) = 0xff;
 19a:	8f ef       	ldi	r24, 0xFF	; 255
 19c:	80 93 70 00 	sts	0x0070, r24
 1a0:	80 93 71 00 	sts	0x0071, r24
 1a4:	80 93 72 00 	sts	0x0072, r24
 1a8:	80 93 73 00 	sts	0x0073, r24
 1ac:	80 93 74 00 	sts	0x0074, r24
 1b0:	80 93 75 00 	sts	0x0075, r24
 1b4:	80 93 76 00 	sts	0x0076, r24

static inline bool pll_is_locked(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	return OSC.STATUS & OSC_PLLRDY_bm;
 1b8:	e0 e5       	ldi	r30, 0x50	; 80
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	81 81       	ldd	r24, Z+1	; 0x01

static inline void pll_enable_config_defaults(unsigned int pll_id)
{
	struct pll_config pllcfg;

	if (pll_is_locked(pll_id)) {
 1be:	84 fd       	sbrc	r24, 4
 1c0:	0b c0       	rjmp	.+22     	; 0x1d8 <sysclk_init+0x3e>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
 1c2:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
 1c4:	f8 94       	cli
static inline void pll_config_write(const struct pll_config *cfg,
		unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	OSC.PLLCTRL = cfg->ctrl;
 1c6:	90 e1       	ldi	r25, 0x10	; 16
 1c8:	95 83       	std	Z+5, r25	; 0x05

	Assert(pll_id < NR_PLLS);

	flags = cpu_irq_save();
	pll_config_write(cfg, pll_id);
	OSC.CTRL |= OSC_PLLEN_bm;
 1ca:	90 81       	ld	r25, Z
 1cc:	90 61       	ori	r25, 0x10	; 16
 1ce:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
 1d0:	8f bf       	out	0x3f, r24	; 63

static inline bool pll_is_locked(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	return OSC.STATUS & OSC_PLLRDY_bm;
 1d2:	81 81       	ldd	r24, Z+1	; 0x01
	default:
		Assert(false);
		break;
	}
	pll_enable(&pllcfg, pll_id);
	while (!pll_is_locked(pll_id));
 1d4:	84 ff       	sbrs	r24, 4
 1d6:	fd cf       	rjmp	.-6      	; 0x1d2 <sysclk_init+0x38>
		default:
			//unhandled_case(CONFIG_SYSCLK_SOURCE);
			return;
		}

		ccp_write_io((uint8_t *)&CLK.CTRL, CONFIG_SYSCLK_SOURCE);
 1d8:	64 e0       	ldi	r22, 0x04	; 4
 1da:	80 e4       	ldi	r24, 0x40	; 64
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	a3 c4       	rjmp	.+2374   	; 0xb26 <ccp_write_io>
 1e0:	08 95       	ret

000001e2 <sysclk_enable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
 1e2:	9f b7       	in	r25, 0x3f	; 63
	cpu_irq_disable();
 1e4:	f8 94       	cli

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
 1e6:	e8 2f       	mov	r30, r24
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	e0 59       	subi	r30, 0x90	; 144
 1ec:	ff 4f       	sbci	r31, 0xFF	; 255
 1ee:	60 95       	com	r22
 1f0:	80 81       	ld	r24, Z
 1f2:	68 23       	and	r22, r24
 1f4:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
 1f6:	9f bf       	out	0x3f, r25	; 63
 1f8:	08 95       	ret

000001fa <__vector_14>:
		tc_tcd1_err_callback = callback;
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
		tc_tce0_err_callback = callback;
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
 21c:	e0 91 32 20 	lds	r30, 0x2032
 220:	f0 91 33 20 	lds	r31, 0x2033
 224:	30 97       	sbiw	r30, 0x00	; 0
 226:	09 f0       	breq	.+2      	; 0x22a <__vector_14+0x30>
 228:	09 95       	icall
 22a:	ff 91       	pop	r31
 22c:	ef 91       	pop	r30
 22e:	bf 91       	pop	r27
 230:	af 91       	pop	r26
 232:	9f 91       	pop	r25
 234:	8f 91       	pop	r24
 236:	7f 91       	pop	r23
 238:	6f 91       	pop	r22
 23a:	5f 91       	pop	r21
 23c:	4f 91       	pop	r20
 23e:	3f 91       	pop	r19
 240:	2f 91       	pop	r18
 242:	0f 90       	pop	r0
 244:	0f be       	out	0x3f, r0	; 63
 246:	0f 90       	pop	r0
 248:	1f 90       	pop	r1
 24a:	18 95       	reti

0000024c <__vector_15>:
 24c:	1f 92       	push	r1
 24e:	0f 92       	push	r0
 250:	0f b6       	in	r0, 0x3f	; 63
 252:	0f 92       	push	r0
 254:	11 24       	eor	r1, r1
 256:	2f 93       	push	r18
 258:	3f 93       	push	r19
 25a:	4f 93       	push	r20
 25c:	5f 93       	push	r21
 25e:	6f 93       	push	r22
 260:	7f 93       	push	r23
 262:	8f 93       	push	r24
 264:	9f 93       	push	r25
 266:	af 93       	push	r26
 268:	bf 93       	push	r27
 26a:	ef 93       	push	r30
 26c:	ff 93       	push	r31
 26e:	e0 91 30 20 	lds	r30, 0x2030
 272:	f0 91 31 20 	lds	r31, 0x2031
 276:	30 97       	sbiw	r30, 0x00	; 0
 278:	09 f0       	breq	.+2      	; 0x27c <__vector_15+0x30>
 27a:	09 95       	icall
 27c:	ff 91       	pop	r31
 27e:	ef 91       	pop	r30
 280:	bf 91       	pop	r27
 282:	af 91       	pop	r26
 284:	9f 91       	pop	r25
 286:	8f 91       	pop	r24
 288:	7f 91       	pop	r23
 28a:	6f 91       	pop	r22
 28c:	5f 91       	pop	r21
 28e:	4f 91       	pop	r20
 290:	3f 91       	pop	r19
 292:	2f 91       	pop	r18
 294:	0f 90       	pop	r0
 296:	0f be       	out	0x3f, r0	; 63
 298:	0f 90       	pop	r0
 29a:	1f 90       	pop	r1
 29c:	18 95       	reti

0000029e <__vector_16>:
 29e:	1f 92       	push	r1
 2a0:	0f 92       	push	r0
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	0f 92       	push	r0
 2a6:	11 24       	eor	r1, r1
 2a8:	2f 93       	push	r18
 2aa:	3f 93       	push	r19
 2ac:	4f 93       	push	r20
 2ae:	5f 93       	push	r21
 2b0:	6f 93       	push	r22
 2b2:	7f 93       	push	r23
 2b4:	8f 93       	push	r24
 2b6:	9f 93       	push	r25
 2b8:	af 93       	push	r26
 2ba:	bf 93       	push	r27
 2bc:	ef 93       	push	r30
 2be:	ff 93       	push	r31
 2c0:	e0 91 2e 20 	lds	r30, 0x202E
 2c4:	f0 91 2f 20 	lds	r31, 0x202F
 2c8:	30 97       	sbiw	r30, 0x00	; 0
 2ca:	09 f0       	breq	.+2      	; 0x2ce <__vector_16+0x30>
 2cc:	09 95       	icall
 2ce:	ff 91       	pop	r31
 2d0:	ef 91       	pop	r30
 2d2:	bf 91       	pop	r27
 2d4:	af 91       	pop	r26
 2d6:	9f 91       	pop	r25
 2d8:	8f 91       	pop	r24
 2da:	7f 91       	pop	r23
 2dc:	6f 91       	pop	r22
 2de:	5f 91       	pop	r21
 2e0:	4f 91       	pop	r20
 2e2:	3f 91       	pop	r19
 2e4:	2f 91       	pop	r18
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <__vector_17>:
 2f0:	1f 92       	push	r1
 2f2:	0f 92       	push	r0
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	0f 92       	push	r0
 2f8:	11 24       	eor	r1, r1
 2fa:	2f 93       	push	r18
 2fc:	3f 93       	push	r19
 2fe:	4f 93       	push	r20
 300:	5f 93       	push	r21
 302:	6f 93       	push	r22
 304:	7f 93       	push	r23
 306:	8f 93       	push	r24
 308:	9f 93       	push	r25
 30a:	af 93       	push	r26
 30c:	bf 93       	push	r27
 30e:	ef 93       	push	r30
 310:	ff 93       	push	r31
 312:	e0 91 2c 20 	lds	r30, 0x202C
 316:	f0 91 2d 20 	lds	r31, 0x202D
 31a:	30 97       	sbiw	r30, 0x00	; 0
 31c:	09 f0       	breq	.+2      	; 0x320 <__vector_17+0x30>
 31e:	09 95       	icall
 320:	ff 91       	pop	r31
 322:	ef 91       	pop	r30
 324:	bf 91       	pop	r27
 326:	af 91       	pop	r26
 328:	9f 91       	pop	r25
 32a:	8f 91       	pop	r24
 32c:	7f 91       	pop	r23
 32e:	6f 91       	pop	r22
 330:	5f 91       	pop	r21
 332:	4f 91       	pop	r20
 334:	3f 91       	pop	r19
 336:	2f 91       	pop	r18
 338:	0f 90       	pop	r0
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	0f 90       	pop	r0
 33e:	1f 90       	pop	r1
 340:	18 95       	reti

00000342 <__vector_18>:
 342:	1f 92       	push	r1
 344:	0f 92       	push	r0
 346:	0f b6       	in	r0, 0x3f	; 63
 348:	0f 92       	push	r0
 34a:	11 24       	eor	r1, r1
 34c:	2f 93       	push	r18
 34e:	3f 93       	push	r19
 350:	4f 93       	push	r20
 352:	5f 93       	push	r21
 354:	6f 93       	push	r22
 356:	7f 93       	push	r23
 358:	8f 93       	push	r24
 35a:	9f 93       	push	r25
 35c:	af 93       	push	r26
 35e:	bf 93       	push	r27
 360:	ef 93       	push	r30
 362:	ff 93       	push	r31
 364:	e0 91 2a 20 	lds	r30, 0x202A
 368:	f0 91 2b 20 	lds	r31, 0x202B
 36c:	30 97       	sbiw	r30, 0x00	; 0
 36e:	09 f0       	breq	.+2      	; 0x372 <__vector_18+0x30>
 370:	09 95       	icall
 372:	ff 91       	pop	r31
 374:	ef 91       	pop	r30
 376:	bf 91       	pop	r27
 378:	af 91       	pop	r26
 37a:	9f 91       	pop	r25
 37c:	8f 91       	pop	r24
 37e:	7f 91       	pop	r23
 380:	6f 91       	pop	r22
 382:	5f 91       	pop	r21
 384:	4f 91       	pop	r20
 386:	3f 91       	pop	r19
 388:	2f 91       	pop	r18
 38a:	0f 90       	pop	r0
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	0f 90       	pop	r0
 390:	1f 90       	pop	r1
 392:	18 95       	reti

00000394 <__vector_19>:
 394:	1f 92       	push	r1
 396:	0f 92       	push	r0
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	0f 92       	push	r0
 39c:	11 24       	eor	r1, r1
 39e:	2f 93       	push	r18
 3a0:	3f 93       	push	r19
 3a2:	4f 93       	push	r20
 3a4:	5f 93       	push	r21
 3a6:	6f 93       	push	r22
 3a8:	7f 93       	push	r23
 3aa:	8f 93       	push	r24
 3ac:	9f 93       	push	r25
 3ae:	af 93       	push	r26
 3b0:	bf 93       	push	r27
 3b2:	ef 93       	push	r30
 3b4:	ff 93       	push	r31
 3b6:	e0 91 28 20 	lds	r30, 0x2028
 3ba:	f0 91 29 20 	lds	r31, 0x2029
 3be:	30 97       	sbiw	r30, 0x00	; 0
 3c0:	09 f0       	breq	.+2      	; 0x3c4 <__vector_19+0x30>
 3c2:	09 95       	icall
 3c4:	ff 91       	pop	r31
 3c6:	ef 91       	pop	r30
 3c8:	bf 91       	pop	r27
 3ca:	af 91       	pop	r26
 3cc:	9f 91       	pop	r25
 3ce:	8f 91       	pop	r24
 3d0:	7f 91       	pop	r23
 3d2:	6f 91       	pop	r22
 3d4:	5f 91       	pop	r21
 3d6:	4f 91       	pop	r20
 3d8:	3f 91       	pop	r19
 3da:	2f 91       	pop	r18
 3dc:	0f 90       	pop	r0
 3de:	0f be       	out	0x3f, r0	; 63
 3e0:	0f 90       	pop	r0
 3e2:	1f 90       	pop	r1
 3e4:	18 95       	reti

000003e6 <__vector_20>:
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	2f 93       	push	r18
 3f2:	3f 93       	push	r19
 3f4:	4f 93       	push	r20
 3f6:	5f 93       	push	r21
 3f8:	6f 93       	push	r22
 3fa:	7f 93       	push	r23
 3fc:	8f 93       	push	r24
 3fe:	9f 93       	push	r25
 400:	af 93       	push	r26
 402:	bf 93       	push	r27
 404:	ef 93       	push	r30
 406:	ff 93       	push	r31
 408:	e0 91 26 20 	lds	r30, 0x2026
 40c:	f0 91 27 20 	lds	r31, 0x2027
 410:	30 97       	sbiw	r30, 0x00	; 0
 412:	09 f0       	breq	.+2      	; 0x416 <__vector_20+0x30>
 414:	09 95       	icall
 416:	ff 91       	pop	r31
 418:	ef 91       	pop	r30
 41a:	bf 91       	pop	r27
 41c:	af 91       	pop	r26
 41e:	9f 91       	pop	r25
 420:	8f 91       	pop	r24
 422:	7f 91       	pop	r23
 424:	6f 91       	pop	r22
 426:	5f 91       	pop	r21
 428:	4f 91       	pop	r20
 42a:	3f 91       	pop	r19
 42c:	2f 91       	pop	r18
 42e:	0f 90       	pop	r0
 430:	0f be       	out	0x3f, r0	; 63
 432:	0f 90       	pop	r0
 434:	1f 90       	pop	r1
 436:	18 95       	reti

00000438 <__vector_21>:
 438:	1f 92       	push	r1
 43a:	0f 92       	push	r0
 43c:	0f b6       	in	r0, 0x3f	; 63
 43e:	0f 92       	push	r0
 440:	11 24       	eor	r1, r1
 442:	2f 93       	push	r18
 444:	3f 93       	push	r19
 446:	4f 93       	push	r20
 448:	5f 93       	push	r21
 44a:	6f 93       	push	r22
 44c:	7f 93       	push	r23
 44e:	8f 93       	push	r24
 450:	9f 93       	push	r25
 452:	af 93       	push	r26
 454:	bf 93       	push	r27
 456:	ef 93       	push	r30
 458:	ff 93       	push	r31
 45a:	e0 91 24 20 	lds	r30, 0x2024
 45e:	f0 91 25 20 	lds	r31, 0x2025
 462:	30 97       	sbiw	r30, 0x00	; 0
 464:	09 f0       	breq	.+2      	; 0x468 <__vector_21+0x30>
 466:	09 95       	icall
 468:	ff 91       	pop	r31
 46a:	ef 91       	pop	r30
 46c:	bf 91       	pop	r27
 46e:	af 91       	pop	r26
 470:	9f 91       	pop	r25
 472:	8f 91       	pop	r24
 474:	7f 91       	pop	r23
 476:	6f 91       	pop	r22
 478:	5f 91       	pop	r21
 47a:	4f 91       	pop	r20
 47c:	3f 91       	pop	r19
 47e:	2f 91       	pop	r18
 480:	0f 90       	pop	r0
 482:	0f be       	out	0x3f, r0	; 63
 484:	0f 90       	pop	r0
 486:	1f 90       	pop	r1
 488:	18 95       	reti

0000048a <__vector_22>:
 48a:	1f 92       	push	r1
 48c:	0f 92       	push	r0
 48e:	0f b6       	in	r0, 0x3f	; 63
 490:	0f 92       	push	r0
 492:	11 24       	eor	r1, r1
 494:	2f 93       	push	r18
 496:	3f 93       	push	r19
 498:	4f 93       	push	r20
 49a:	5f 93       	push	r21
 49c:	6f 93       	push	r22
 49e:	7f 93       	push	r23
 4a0:	8f 93       	push	r24
 4a2:	9f 93       	push	r25
 4a4:	af 93       	push	r26
 4a6:	bf 93       	push	r27
 4a8:	ef 93       	push	r30
 4aa:	ff 93       	push	r31
 4ac:	e0 91 22 20 	lds	r30, 0x2022
 4b0:	f0 91 23 20 	lds	r31, 0x2023
 4b4:	30 97       	sbiw	r30, 0x00	; 0
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__vector_22+0x30>
 4b8:	09 95       	icall
 4ba:	ff 91       	pop	r31
 4bc:	ef 91       	pop	r30
 4be:	bf 91       	pop	r27
 4c0:	af 91       	pop	r26
 4c2:	9f 91       	pop	r25
 4c4:	8f 91       	pop	r24
 4c6:	7f 91       	pop	r23
 4c8:	6f 91       	pop	r22
 4ca:	5f 91       	pop	r21
 4cc:	4f 91       	pop	r20
 4ce:	3f 91       	pop	r19
 4d0:	2f 91       	pop	r18
 4d2:	0f 90       	pop	r0
 4d4:	0f be       	out	0x3f, r0	; 63
 4d6:	0f 90       	pop	r0
 4d8:	1f 90       	pop	r1
 4da:	18 95       	reti

000004dc <__vector_23>:
 4dc:	1f 92       	push	r1
 4de:	0f 92       	push	r0
 4e0:	0f b6       	in	r0, 0x3f	; 63
 4e2:	0f 92       	push	r0
 4e4:	11 24       	eor	r1, r1
 4e6:	2f 93       	push	r18
 4e8:	3f 93       	push	r19
 4ea:	4f 93       	push	r20
 4ec:	5f 93       	push	r21
 4ee:	6f 93       	push	r22
 4f0:	7f 93       	push	r23
 4f2:	8f 93       	push	r24
 4f4:	9f 93       	push	r25
 4f6:	af 93       	push	r26
 4f8:	bf 93       	push	r27
 4fa:	ef 93       	push	r30
 4fc:	ff 93       	push	r31
 4fe:	e0 91 20 20 	lds	r30, 0x2020
 502:	f0 91 21 20 	lds	r31, 0x2021
 506:	30 97       	sbiw	r30, 0x00	; 0
 508:	09 f0       	breq	.+2      	; 0x50c <__vector_23+0x30>
 50a:	09 95       	icall
 50c:	ff 91       	pop	r31
 50e:	ef 91       	pop	r30
 510:	bf 91       	pop	r27
 512:	af 91       	pop	r26
 514:	9f 91       	pop	r25
 516:	8f 91       	pop	r24
 518:	7f 91       	pop	r23
 51a:	6f 91       	pop	r22
 51c:	5f 91       	pop	r21
 51e:	4f 91       	pop	r20
 520:	3f 91       	pop	r19
 522:	2f 91       	pop	r18
 524:	0f 90       	pop	r0
 526:	0f be       	out	0x3f, r0	; 63
 528:	0f 90       	pop	r0
 52a:	1f 90       	pop	r1
 52c:	18 95       	reti

0000052e <__vector_77>:
 52e:	1f 92       	push	r1
 530:	0f 92       	push	r0
 532:	0f b6       	in	r0, 0x3f	; 63
 534:	0f 92       	push	r0
 536:	11 24       	eor	r1, r1
 538:	2f 93       	push	r18
 53a:	3f 93       	push	r19
 53c:	4f 93       	push	r20
 53e:	5f 93       	push	r21
 540:	6f 93       	push	r22
 542:	7f 93       	push	r23
 544:	8f 93       	push	r24
 546:	9f 93       	push	r25
 548:	af 93       	push	r26
 54a:	bf 93       	push	r27
 54c:	ef 93       	push	r30
 54e:	ff 93       	push	r31
 550:	e0 91 1e 20 	lds	r30, 0x201E
 554:	f0 91 1f 20 	lds	r31, 0x201F
 558:	30 97       	sbiw	r30, 0x00	; 0
 55a:	09 f0       	breq	.+2      	; 0x55e <__vector_77+0x30>
 55c:	09 95       	icall
 55e:	ff 91       	pop	r31
 560:	ef 91       	pop	r30
 562:	bf 91       	pop	r27
 564:	af 91       	pop	r26
 566:	9f 91       	pop	r25
 568:	8f 91       	pop	r24
 56a:	7f 91       	pop	r23
 56c:	6f 91       	pop	r22
 56e:	5f 91       	pop	r21
 570:	4f 91       	pop	r20
 572:	3f 91       	pop	r19
 574:	2f 91       	pop	r18
 576:	0f 90       	pop	r0
 578:	0f be       	out	0x3f, r0	; 63
 57a:	0f 90       	pop	r0
 57c:	1f 90       	pop	r1
 57e:	18 95       	reti

00000580 <__vector_78>:
 580:	1f 92       	push	r1
 582:	0f 92       	push	r0
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	0f 92       	push	r0
 588:	11 24       	eor	r1, r1
 58a:	2f 93       	push	r18
 58c:	3f 93       	push	r19
 58e:	4f 93       	push	r20
 590:	5f 93       	push	r21
 592:	6f 93       	push	r22
 594:	7f 93       	push	r23
 596:	8f 93       	push	r24
 598:	9f 93       	push	r25
 59a:	af 93       	push	r26
 59c:	bf 93       	push	r27
 59e:	ef 93       	push	r30
 5a0:	ff 93       	push	r31
 5a2:	e0 91 1c 20 	lds	r30, 0x201C
 5a6:	f0 91 1d 20 	lds	r31, 0x201D
 5aa:	30 97       	sbiw	r30, 0x00	; 0
 5ac:	09 f0       	breq	.+2      	; 0x5b0 <__vector_78+0x30>
 5ae:	09 95       	icall
 5b0:	ff 91       	pop	r31
 5b2:	ef 91       	pop	r30
 5b4:	bf 91       	pop	r27
 5b6:	af 91       	pop	r26
 5b8:	9f 91       	pop	r25
 5ba:	8f 91       	pop	r24
 5bc:	7f 91       	pop	r23
 5be:	6f 91       	pop	r22
 5c0:	5f 91       	pop	r21
 5c2:	4f 91       	pop	r20
 5c4:	3f 91       	pop	r19
 5c6:	2f 91       	pop	r18
 5c8:	0f 90       	pop	r0
 5ca:	0f be       	out	0x3f, r0	; 63
 5cc:	0f 90       	pop	r0
 5ce:	1f 90       	pop	r1
 5d0:	18 95       	reti

000005d2 <__vector_79>:
 5d2:	1f 92       	push	r1
 5d4:	0f 92       	push	r0
 5d6:	0f b6       	in	r0, 0x3f	; 63
 5d8:	0f 92       	push	r0
 5da:	11 24       	eor	r1, r1
 5dc:	2f 93       	push	r18
 5de:	3f 93       	push	r19
 5e0:	4f 93       	push	r20
 5e2:	5f 93       	push	r21
 5e4:	6f 93       	push	r22
 5e6:	7f 93       	push	r23
 5e8:	8f 93       	push	r24
 5ea:	9f 93       	push	r25
 5ec:	af 93       	push	r26
 5ee:	bf 93       	push	r27
 5f0:	ef 93       	push	r30
 5f2:	ff 93       	push	r31
 5f4:	e0 91 1a 20 	lds	r30, 0x201A
 5f8:	f0 91 1b 20 	lds	r31, 0x201B
 5fc:	30 97       	sbiw	r30, 0x00	; 0
 5fe:	09 f0       	breq	.+2      	; 0x602 <__vector_79+0x30>
 600:	09 95       	icall
 602:	ff 91       	pop	r31
 604:	ef 91       	pop	r30
 606:	bf 91       	pop	r27
 608:	af 91       	pop	r26
 60a:	9f 91       	pop	r25
 60c:	8f 91       	pop	r24
 60e:	7f 91       	pop	r23
 610:	6f 91       	pop	r22
 612:	5f 91       	pop	r21
 614:	4f 91       	pop	r20
 616:	3f 91       	pop	r19
 618:	2f 91       	pop	r18
 61a:	0f 90       	pop	r0
 61c:	0f be       	out	0x3f, r0	; 63
 61e:	0f 90       	pop	r0
 620:	1f 90       	pop	r1
 622:	18 95       	reti

00000624 <__vector_80>:
 624:	1f 92       	push	r1
 626:	0f 92       	push	r0
 628:	0f b6       	in	r0, 0x3f	; 63
 62a:	0f 92       	push	r0
 62c:	11 24       	eor	r1, r1
 62e:	2f 93       	push	r18
 630:	3f 93       	push	r19
 632:	4f 93       	push	r20
 634:	5f 93       	push	r21
 636:	6f 93       	push	r22
 638:	7f 93       	push	r23
 63a:	8f 93       	push	r24
 63c:	9f 93       	push	r25
 63e:	af 93       	push	r26
 640:	bf 93       	push	r27
 642:	ef 93       	push	r30
 644:	ff 93       	push	r31
 646:	e0 91 18 20 	lds	r30, 0x2018
 64a:	f0 91 19 20 	lds	r31, 0x2019
 64e:	30 97       	sbiw	r30, 0x00	; 0
 650:	09 f0       	breq	.+2      	; 0x654 <__vector_80+0x30>
 652:	09 95       	icall
 654:	ff 91       	pop	r31
 656:	ef 91       	pop	r30
 658:	bf 91       	pop	r27
 65a:	af 91       	pop	r26
 65c:	9f 91       	pop	r25
 65e:	8f 91       	pop	r24
 660:	7f 91       	pop	r23
 662:	6f 91       	pop	r22
 664:	5f 91       	pop	r21
 666:	4f 91       	pop	r20
 668:	3f 91       	pop	r19
 66a:	2f 91       	pop	r18
 66c:	0f 90       	pop	r0
 66e:	0f be       	out	0x3f, r0	; 63
 670:	0f 90       	pop	r0
 672:	1f 90       	pop	r1
 674:	18 95       	reti

00000676 <__vector_81>:
 676:	1f 92       	push	r1
 678:	0f 92       	push	r0
 67a:	0f b6       	in	r0, 0x3f	; 63
 67c:	0f 92       	push	r0
 67e:	11 24       	eor	r1, r1
 680:	2f 93       	push	r18
 682:	3f 93       	push	r19
 684:	4f 93       	push	r20
 686:	5f 93       	push	r21
 688:	6f 93       	push	r22
 68a:	7f 93       	push	r23
 68c:	8f 93       	push	r24
 68e:	9f 93       	push	r25
 690:	af 93       	push	r26
 692:	bf 93       	push	r27
 694:	ef 93       	push	r30
 696:	ff 93       	push	r31
 698:	e0 91 16 20 	lds	r30, 0x2016
 69c:	f0 91 17 20 	lds	r31, 0x2017
 6a0:	30 97       	sbiw	r30, 0x00	; 0
 6a2:	09 f0       	breq	.+2      	; 0x6a6 <__vector_81+0x30>
 6a4:	09 95       	icall
 6a6:	ff 91       	pop	r31
 6a8:	ef 91       	pop	r30
 6aa:	bf 91       	pop	r27
 6ac:	af 91       	pop	r26
 6ae:	9f 91       	pop	r25
 6b0:	8f 91       	pop	r24
 6b2:	7f 91       	pop	r23
 6b4:	6f 91       	pop	r22
 6b6:	5f 91       	pop	r21
 6b8:	4f 91       	pop	r20
 6ba:	3f 91       	pop	r19
 6bc:	2f 91       	pop	r18
 6be:	0f 90       	pop	r0
 6c0:	0f be       	out	0x3f, r0	; 63
 6c2:	0f 90       	pop	r0
 6c4:	1f 90       	pop	r1
 6c6:	18 95       	reti

000006c8 <__vector_82>:
 6c8:	1f 92       	push	r1
 6ca:	0f 92       	push	r0
 6cc:	0f b6       	in	r0, 0x3f	; 63
 6ce:	0f 92       	push	r0
 6d0:	11 24       	eor	r1, r1
 6d2:	2f 93       	push	r18
 6d4:	3f 93       	push	r19
 6d6:	4f 93       	push	r20
 6d8:	5f 93       	push	r21
 6da:	6f 93       	push	r22
 6dc:	7f 93       	push	r23
 6de:	8f 93       	push	r24
 6e0:	9f 93       	push	r25
 6e2:	af 93       	push	r26
 6e4:	bf 93       	push	r27
 6e6:	ef 93       	push	r30
 6e8:	ff 93       	push	r31
 6ea:	e0 91 14 20 	lds	r30, 0x2014
 6ee:	f0 91 15 20 	lds	r31, 0x2015
 6f2:	30 97       	sbiw	r30, 0x00	; 0
 6f4:	09 f0       	breq	.+2      	; 0x6f8 <__vector_82+0x30>
 6f6:	09 95       	icall
 6f8:	ff 91       	pop	r31
 6fa:	ef 91       	pop	r30
 6fc:	bf 91       	pop	r27
 6fe:	af 91       	pop	r26
 700:	9f 91       	pop	r25
 702:	8f 91       	pop	r24
 704:	7f 91       	pop	r23
 706:	6f 91       	pop	r22
 708:	5f 91       	pop	r21
 70a:	4f 91       	pop	r20
 70c:	3f 91       	pop	r19
 70e:	2f 91       	pop	r18
 710:	0f 90       	pop	r0
 712:	0f be       	out	0x3f, r0	; 63
 714:	0f 90       	pop	r0
 716:	1f 90       	pop	r1
 718:	18 95       	reti

0000071a <__vector_83>:
 71a:	1f 92       	push	r1
 71c:	0f 92       	push	r0
 71e:	0f b6       	in	r0, 0x3f	; 63
 720:	0f 92       	push	r0
 722:	11 24       	eor	r1, r1
 724:	2f 93       	push	r18
 726:	3f 93       	push	r19
 728:	4f 93       	push	r20
 72a:	5f 93       	push	r21
 72c:	6f 93       	push	r22
 72e:	7f 93       	push	r23
 730:	8f 93       	push	r24
 732:	9f 93       	push	r25
 734:	af 93       	push	r26
 736:	bf 93       	push	r27
 738:	ef 93       	push	r30
 73a:	ff 93       	push	r31
 73c:	e0 91 12 20 	lds	r30, 0x2012
 740:	f0 91 13 20 	lds	r31, 0x2013
 744:	30 97       	sbiw	r30, 0x00	; 0
 746:	09 f0       	breq	.+2      	; 0x74a <__vector_83+0x30>
 748:	09 95       	icall
 74a:	ff 91       	pop	r31
 74c:	ef 91       	pop	r30
 74e:	bf 91       	pop	r27
 750:	af 91       	pop	r26
 752:	9f 91       	pop	r25
 754:	8f 91       	pop	r24
 756:	7f 91       	pop	r23
 758:	6f 91       	pop	r22
 75a:	5f 91       	pop	r21
 75c:	4f 91       	pop	r20
 75e:	3f 91       	pop	r19
 760:	2f 91       	pop	r18
 762:	0f 90       	pop	r0
 764:	0f be       	out	0x3f, r0	; 63
 766:	0f 90       	pop	r0
 768:	1f 90       	pop	r1
 76a:	18 95       	reti

0000076c <__vector_84>:
 76c:	1f 92       	push	r1
 76e:	0f 92       	push	r0
 770:	0f b6       	in	r0, 0x3f	; 63
 772:	0f 92       	push	r0
 774:	11 24       	eor	r1, r1
 776:	2f 93       	push	r18
 778:	3f 93       	push	r19
 77a:	4f 93       	push	r20
 77c:	5f 93       	push	r21
 77e:	6f 93       	push	r22
 780:	7f 93       	push	r23
 782:	8f 93       	push	r24
 784:	9f 93       	push	r25
 786:	af 93       	push	r26
 788:	bf 93       	push	r27
 78a:	ef 93       	push	r30
 78c:	ff 93       	push	r31
 78e:	e0 91 10 20 	lds	r30, 0x2010
 792:	f0 91 11 20 	lds	r31, 0x2011
 796:	30 97       	sbiw	r30, 0x00	; 0
 798:	09 f0       	breq	.+2      	; 0x79c <__vector_84+0x30>
 79a:	09 95       	icall
 79c:	ff 91       	pop	r31
 79e:	ef 91       	pop	r30
 7a0:	bf 91       	pop	r27
 7a2:	af 91       	pop	r26
 7a4:	9f 91       	pop	r25
 7a6:	8f 91       	pop	r24
 7a8:	7f 91       	pop	r23
 7aa:	6f 91       	pop	r22
 7ac:	5f 91       	pop	r21
 7ae:	4f 91       	pop	r20
 7b0:	3f 91       	pop	r19
 7b2:	2f 91       	pop	r18
 7b4:	0f 90       	pop	r0
 7b6:	0f be       	out	0x3f, r0	; 63
 7b8:	0f 90       	pop	r0
 7ba:	1f 90       	pop	r1
 7bc:	18 95       	reti

000007be <__vector_85>:
 7be:	1f 92       	push	r1
 7c0:	0f 92       	push	r0
 7c2:	0f b6       	in	r0, 0x3f	; 63
 7c4:	0f 92       	push	r0
 7c6:	11 24       	eor	r1, r1
 7c8:	2f 93       	push	r18
 7ca:	3f 93       	push	r19
 7cc:	4f 93       	push	r20
 7ce:	5f 93       	push	r21
 7d0:	6f 93       	push	r22
 7d2:	7f 93       	push	r23
 7d4:	8f 93       	push	r24
 7d6:	9f 93       	push	r25
 7d8:	af 93       	push	r26
 7da:	bf 93       	push	r27
 7dc:	ef 93       	push	r30
 7de:	ff 93       	push	r31
 7e0:	e0 91 0e 20 	lds	r30, 0x200E
 7e4:	f0 91 0f 20 	lds	r31, 0x200F
 7e8:	30 97       	sbiw	r30, 0x00	; 0
 7ea:	09 f0       	breq	.+2      	; 0x7ee <__vector_85+0x30>
 7ec:	09 95       	icall
 7ee:	ff 91       	pop	r31
 7f0:	ef 91       	pop	r30
 7f2:	bf 91       	pop	r27
 7f4:	af 91       	pop	r26
 7f6:	9f 91       	pop	r25
 7f8:	8f 91       	pop	r24
 7fa:	7f 91       	pop	r23
 7fc:	6f 91       	pop	r22
 7fe:	5f 91       	pop	r21
 800:	4f 91       	pop	r20
 802:	3f 91       	pop	r19
 804:	2f 91       	pop	r18
 806:	0f 90       	pop	r0
 808:	0f be       	out	0x3f, r0	; 63
 80a:	0f 90       	pop	r0
 80c:	1f 90       	pop	r1
 80e:	18 95       	reti

00000810 <__vector_86>:
 810:	1f 92       	push	r1
 812:	0f 92       	push	r0
 814:	0f b6       	in	r0, 0x3f	; 63
 816:	0f 92       	push	r0
 818:	11 24       	eor	r1, r1
 81a:	2f 93       	push	r18
 81c:	3f 93       	push	r19
 81e:	4f 93       	push	r20
 820:	5f 93       	push	r21
 822:	6f 93       	push	r22
 824:	7f 93       	push	r23
 826:	8f 93       	push	r24
 828:	9f 93       	push	r25
 82a:	af 93       	push	r26
 82c:	bf 93       	push	r27
 82e:	ef 93       	push	r30
 830:	ff 93       	push	r31
 832:	e0 91 0c 20 	lds	r30, 0x200C
 836:	f0 91 0d 20 	lds	r31, 0x200D
 83a:	30 97       	sbiw	r30, 0x00	; 0
 83c:	09 f0       	breq	.+2      	; 0x840 <__vector_86+0x30>
 83e:	09 95       	icall
 840:	ff 91       	pop	r31
 842:	ef 91       	pop	r30
 844:	bf 91       	pop	r27
 846:	af 91       	pop	r26
 848:	9f 91       	pop	r25
 84a:	8f 91       	pop	r24
 84c:	7f 91       	pop	r23
 84e:	6f 91       	pop	r22
 850:	5f 91       	pop	r21
 852:	4f 91       	pop	r20
 854:	3f 91       	pop	r19
 856:	2f 91       	pop	r18
 858:	0f 90       	pop	r0
 85a:	0f be       	out	0x3f, r0	; 63
 85c:	0f 90       	pop	r0
 85e:	1f 90       	pop	r1
 860:	18 95       	reti

00000862 <__vector_47>:
 862:	1f 92       	push	r1
 864:	0f 92       	push	r0
 866:	0f b6       	in	r0, 0x3f	; 63
 868:	0f 92       	push	r0
 86a:	11 24       	eor	r1, r1
 86c:	2f 93       	push	r18
 86e:	3f 93       	push	r19
 870:	4f 93       	push	r20
 872:	5f 93       	push	r21
 874:	6f 93       	push	r22
 876:	7f 93       	push	r23
 878:	8f 93       	push	r24
 87a:	9f 93       	push	r25
 87c:	af 93       	push	r26
 87e:	bf 93       	push	r27
 880:	ef 93       	push	r30
 882:	ff 93       	push	r31
 884:	e0 91 0a 20 	lds	r30, 0x200A
 888:	f0 91 0b 20 	lds	r31, 0x200B
 88c:	30 97       	sbiw	r30, 0x00	; 0
 88e:	09 f0       	breq	.+2      	; 0x892 <__vector_47+0x30>
 890:	09 95       	icall
 892:	ff 91       	pop	r31
 894:	ef 91       	pop	r30
 896:	bf 91       	pop	r27
 898:	af 91       	pop	r26
 89a:	9f 91       	pop	r25
 89c:	8f 91       	pop	r24
 89e:	7f 91       	pop	r23
 8a0:	6f 91       	pop	r22
 8a2:	5f 91       	pop	r21
 8a4:	4f 91       	pop	r20
 8a6:	3f 91       	pop	r19
 8a8:	2f 91       	pop	r18
 8aa:	0f 90       	pop	r0
 8ac:	0f be       	out	0x3f, r0	; 63
 8ae:	0f 90       	pop	r0
 8b0:	1f 90       	pop	r1
 8b2:	18 95       	reti

000008b4 <__vector_48>:
 8b4:	1f 92       	push	r1
 8b6:	0f 92       	push	r0
 8b8:	0f b6       	in	r0, 0x3f	; 63
 8ba:	0f 92       	push	r0
 8bc:	11 24       	eor	r1, r1
 8be:	2f 93       	push	r18
 8c0:	3f 93       	push	r19
 8c2:	4f 93       	push	r20
 8c4:	5f 93       	push	r21
 8c6:	6f 93       	push	r22
 8c8:	7f 93       	push	r23
 8ca:	8f 93       	push	r24
 8cc:	9f 93       	push	r25
 8ce:	af 93       	push	r26
 8d0:	bf 93       	push	r27
 8d2:	ef 93       	push	r30
 8d4:	ff 93       	push	r31
 8d6:	e0 91 08 20 	lds	r30, 0x2008
 8da:	f0 91 09 20 	lds	r31, 0x2009
 8de:	30 97       	sbiw	r30, 0x00	; 0
 8e0:	09 f0       	breq	.+2      	; 0x8e4 <__vector_48+0x30>
 8e2:	09 95       	icall
 8e4:	ff 91       	pop	r31
 8e6:	ef 91       	pop	r30
 8e8:	bf 91       	pop	r27
 8ea:	af 91       	pop	r26
 8ec:	9f 91       	pop	r25
 8ee:	8f 91       	pop	r24
 8f0:	7f 91       	pop	r23
 8f2:	6f 91       	pop	r22
 8f4:	5f 91       	pop	r21
 8f6:	4f 91       	pop	r20
 8f8:	3f 91       	pop	r19
 8fa:	2f 91       	pop	r18
 8fc:	0f 90       	pop	r0
 8fe:	0f be       	out	0x3f, r0	; 63
 900:	0f 90       	pop	r0
 902:	1f 90       	pop	r1
 904:	18 95       	reti

00000906 <__vector_49>:
 906:	1f 92       	push	r1
 908:	0f 92       	push	r0
 90a:	0f b6       	in	r0, 0x3f	; 63
 90c:	0f 92       	push	r0
 90e:	11 24       	eor	r1, r1
 910:	2f 93       	push	r18
 912:	3f 93       	push	r19
 914:	4f 93       	push	r20
 916:	5f 93       	push	r21
 918:	6f 93       	push	r22
 91a:	7f 93       	push	r23
 91c:	8f 93       	push	r24
 91e:	9f 93       	push	r25
 920:	af 93       	push	r26
 922:	bf 93       	push	r27
 924:	ef 93       	push	r30
 926:	ff 93       	push	r31
 928:	e0 91 06 20 	lds	r30, 0x2006
 92c:	f0 91 07 20 	lds	r31, 0x2007
 930:	30 97       	sbiw	r30, 0x00	; 0
 932:	09 f0       	breq	.+2      	; 0x936 <__vector_49+0x30>
 934:	09 95       	icall
 936:	ff 91       	pop	r31
 938:	ef 91       	pop	r30
 93a:	bf 91       	pop	r27
 93c:	af 91       	pop	r26
 93e:	9f 91       	pop	r25
 940:	8f 91       	pop	r24
 942:	7f 91       	pop	r23
 944:	6f 91       	pop	r22
 946:	5f 91       	pop	r21
 948:	4f 91       	pop	r20
 94a:	3f 91       	pop	r19
 94c:	2f 91       	pop	r18
 94e:	0f 90       	pop	r0
 950:	0f be       	out	0x3f, r0	; 63
 952:	0f 90       	pop	r0
 954:	1f 90       	pop	r1
 956:	18 95       	reti

00000958 <__vector_50>:
 958:	1f 92       	push	r1
 95a:	0f 92       	push	r0
 95c:	0f b6       	in	r0, 0x3f	; 63
 95e:	0f 92       	push	r0
 960:	11 24       	eor	r1, r1
 962:	2f 93       	push	r18
 964:	3f 93       	push	r19
 966:	4f 93       	push	r20
 968:	5f 93       	push	r21
 96a:	6f 93       	push	r22
 96c:	7f 93       	push	r23
 96e:	8f 93       	push	r24
 970:	9f 93       	push	r25
 972:	af 93       	push	r26
 974:	bf 93       	push	r27
 976:	ef 93       	push	r30
 978:	ff 93       	push	r31
 97a:	e0 91 04 20 	lds	r30, 0x2004
 97e:	f0 91 05 20 	lds	r31, 0x2005
 982:	30 97       	sbiw	r30, 0x00	; 0
 984:	09 f0       	breq	.+2      	; 0x988 <__vector_50+0x30>
 986:	09 95       	icall
 988:	ff 91       	pop	r31
 98a:	ef 91       	pop	r30
 98c:	bf 91       	pop	r27
 98e:	af 91       	pop	r26
 990:	9f 91       	pop	r25
 992:	8f 91       	pop	r24
 994:	7f 91       	pop	r23
 996:	6f 91       	pop	r22
 998:	5f 91       	pop	r21
 99a:	4f 91       	pop	r20
 99c:	3f 91       	pop	r19
 99e:	2f 91       	pop	r18
 9a0:	0f 90       	pop	r0
 9a2:	0f be       	out	0x3f, r0	; 63
 9a4:	0f 90       	pop	r0
 9a6:	1f 90       	pop	r1
 9a8:	18 95       	reti

000009aa <__vector_51>:
 9aa:	1f 92       	push	r1
 9ac:	0f 92       	push	r0
 9ae:	0f b6       	in	r0, 0x3f	; 63
 9b0:	0f 92       	push	r0
 9b2:	11 24       	eor	r1, r1
 9b4:	2f 93       	push	r18
 9b6:	3f 93       	push	r19
 9b8:	4f 93       	push	r20
 9ba:	5f 93       	push	r21
 9bc:	6f 93       	push	r22
 9be:	7f 93       	push	r23
 9c0:	8f 93       	push	r24
 9c2:	9f 93       	push	r25
 9c4:	af 93       	push	r26
 9c6:	bf 93       	push	r27
 9c8:	ef 93       	push	r30
 9ca:	ff 93       	push	r31
 9cc:	e0 91 02 20 	lds	r30, 0x2002
 9d0:	f0 91 03 20 	lds	r31, 0x2003
 9d4:	30 97       	sbiw	r30, 0x00	; 0
 9d6:	09 f0       	breq	.+2      	; 0x9da <__vector_51+0x30>
 9d8:	09 95       	icall
 9da:	ff 91       	pop	r31
 9dc:	ef 91       	pop	r30
 9de:	bf 91       	pop	r27
 9e0:	af 91       	pop	r26
 9e2:	9f 91       	pop	r25
 9e4:	8f 91       	pop	r24
 9e6:	7f 91       	pop	r23
 9e8:	6f 91       	pop	r22
 9ea:	5f 91       	pop	r21
 9ec:	4f 91       	pop	r20
 9ee:	3f 91       	pop	r19
 9f0:	2f 91       	pop	r18
 9f2:	0f 90       	pop	r0
 9f4:	0f be       	out	0x3f, r0	; 63
 9f6:	0f 90       	pop	r0
 9f8:	1f 90       	pop	r1
 9fa:	18 95       	reti

000009fc <__vector_52>:
 9fc:	1f 92       	push	r1
 9fe:	0f 92       	push	r0
 a00:	0f b6       	in	r0, 0x3f	; 63
 a02:	0f 92       	push	r0
 a04:	11 24       	eor	r1, r1
 a06:	2f 93       	push	r18
 a08:	3f 93       	push	r19
 a0a:	4f 93       	push	r20
 a0c:	5f 93       	push	r21
 a0e:	6f 93       	push	r22
 a10:	7f 93       	push	r23
 a12:	8f 93       	push	r24
 a14:	9f 93       	push	r25
 a16:	af 93       	push	r26
 a18:	bf 93       	push	r27
 a1a:	ef 93       	push	r30
 a1c:	ff 93       	push	r31
 a1e:	e0 91 00 20 	lds	r30, 0x2000
 a22:	f0 91 01 20 	lds	r31, 0x2001
 a26:	30 97       	sbiw	r30, 0x00	; 0
 a28:	09 f0       	breq	.+2      	; 0xa2c <__vector_52+0x30>
 a2a:	09 95       	icall
 a2c:	ff 91       	pop	r31
 a2e:	ef 91       	pop	r30
 a30:	bf 91       	pop	r27
 a32:	af 91       	pop	r26
 a34:	9f 91       	pop	r25
 a36:	8f 91       	pop	r24
 a38:	7f 91       	pop	r23
 a3a:	6f 91       	pop	r22
 a3c:	5f 91       	pop	r21
 a3e:	4f 91       	pop	r20
 a40:	3f 91       	pop	r19
 a42:	2f 91       	pop	r18
 a44:	0f 90       	pop	r0
 a46:	0f be       	out	0x3f, r0	; 63
 a48:	0f 90       	pop	r0
 a4a:	1f 90       	pop	r1
 a4c:	18 95       	reti

00000a4e <tc_enable>:
 a4e:	cf 93       	push	r28
 a50:	cf b7       	in	r28, 0x3f	; 63
 a52:	f8 94       	cli
 a54:	28 2f       	mov	r18, r24
 a56:	39 2f       	mov	r19, r25
 a58:	21 15       	cp	r18, r1
 a5a:	88 e0       	ldi	r24, 0x08	; 8
 a5c:	38 07       	cpc	r19, r24
 a5e:	39 f4       	brne	.+14     	; 0xa6e <tc_enable+0x20>
 a60:	61 e0       	ldi	r22, 0x01	; 1
 a62:	83 e0       	ldi	r24, 0x03	; 3
 a64:	be db       	rcall	.-2180   	; 0x1e2 <sysclk_enable_module>
 a66:	64 e0       	ldi	r22, 0x04	; 4
 a68:	83 e0       	ldi	r24, 0x03	; 3
 a6a:	bb db       	rcall	.-2186   	; 0x1e2 <sysclk_enable_module>
 a6c:	2d c0       	rjmp	.+90     	; 0xac8 <tc_enable+0x7a>
 a6e:	20 34       	cpi	r18, 0x40	; 64
 a70:	88 e0       	ldi	r24, 0x08	; 8
 a72:	38 07       	cpc	r19, r24
 a74:	39 f4       	brne	.+14     	; 0xa84 <tc_enable+0x36>
 a76:	62 e0       	ldi	r22, 0x02	; 2
 a78:	83 e0       	ldi	r24, 0x03	; 3
 a7a:	b3 db       	rcall	.-2202   	; 0x1e2 <sysclk_enable_module>
 a7c:	64 e0       	ldi	r22, 0x04	; 4
 a7e:	83 e0       	ldi	r24, 0x03	; 3
 a80:	b0 db       	rcall	.-2208   	; 0x1e2 <sysclk_enable_module>
 a82:	22 c0       	rjmp	.+68     	; 0xac8 <tc_enable+0x7a>
 a84:	21 15       	cp	r18, r1
 a86:	89 e0       	ldi	r24, 0x09	; 9
 a88:	38 07       	cpc	r19, r24
 a8a:	39 f4       	brne	.+14     	; 0xa9a <tc_enable+0x4c>
 a8c:	61 e0       	ldi	r22, 0x01	; 1
 a8e:	84 e0       	ldi	r24, 0x04	; 4
 a90:	a8 db       	rcall	.-2224   	; 0x1e2 <sysclk_enable_module>
 a92:	64 e0       	ldi	r22, 0x04	; 4
 a94:	84 e0       	ldi	r24, 0x04	; 4
 a96:	a5 db       	rcall	.-2230   	; 0x1e2 <sysclk_enable_module>
 a98:	17 c0       	rjmp	.+46     	; 0xac8 <tc_enable+0x7a>
 a9a:	20 34       	cpi	r18, 0x40	; 64
 a9c:	89 e0       	ldi	r24, 0x09	; 9
 a9e:	38 07       	cpc	r19, r24
 aa0:	39 f4       	brne	.+14     	; 0xab0 <tc_enable+0x62>
 aa2:	62 e0       	ldi	r22, 0x02	; 2
 aa4:	84 e0       	ldi	r24, 0x04	; 4
 aa6:	9d db       	rcall	.-2246   	; 0x1e2 <sysclk_enable_module>
 aa8:	64 e0       	ldi	r22, 0x04	; 4
 aaa:	84 e0       	ldi	r24, 0x04	; 4
 aac:	9a db       	rcall	.-2252   	; 0x1e2 <sysclk_enable_module>
 aae:	0c c0       	rjmp	.+24     	; 0xac8 <tc_enable+0x7a>
 ab0:	21 15       	cp	r18, r1
 ab2:	3a 40       	sbci	r19, 0x0A	; 10
 ab4:	39 f4       	brne	.+14     	; 0xac4 <tc_enable+0x76>
 ab6:	61 e0       	ldi	r22, 0x01	; 1
 ab8:	85 e0       	ldi	r24, 0x05	; 5
 aba:	93 db       	rcall	.-2266   	; 0x1e2 <sysclk_enable_module>
 abc:	64 e0       	ldi	r22, 0x04	; 4
 abe:	85 e0       	ldi	r24, 0x05	; 5
 ac0:	90 db       	rcall	.-2272   	; 0x1e2 <sysclk_enable_module>
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <tc_enable+0x7a>
 ac4:	cf bf       	out	0x3f, r28	; 63
 ac6:	01 c0       	rjmp	.+2      	; 0xaca <tc_enable+0x7c>
 ac8:	cf bf       	out	0x3f, r28	; 63
 aca:	cf 91       	pop	r28
 acc:	08 95       	ret

00000ace <tc_set_cca_interrupt_callback>:
}

void tc_set_cca_interrupt_callback(volatile void *tc, tc_callback_t callback)
{
#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
 ace:	81 15       	cp	r24, r1
 ad0:	28 e0       	ldi	r18, 0x08	; 8
 ad2:	92 07       	cpc	r25, r18
 ad4:	29 f4       	brne	.+10     	; 0xae0 <tc_set_cca_interrupt_callback+0x12>
		tc_tcc0_cca_callback = callback;
 ad6:	60 93 2e 20 	sts	0x202E, r22
 ada:	70 93 2f 20 	sts	0x202F, r23
 ade:	08 95       	ret
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
 ae0:	80 34       	cpi	r24, 0x40	; 64
 ae2:	28 e0       	ldi	r18, 0x08	; 8
 ae4:	92 07       	cpc	r25, r18
 ae6:	29 f4       	brne	.+10     	; 0xaf2 <tc_set_cca_interrupt_callback+0x24>
		tc_tcc1_cca_callback = callback;
 ae8:	60 93 22 20 	sts	0x2022, r22
 aec:	70 93 23 20 	sts	0x2023, r23
 af0:	08 95       	ret
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
 af2:	81 15       	cp	r24, r1
 af4:	29 e0       	ldi	r18, 0x09	; 9
 af6:	92 07       	cpc	r25, r18
 af8:	29 f4       	brne	.+10     	; 0xb04 <tc_set_cca_interrupt_callback+0x36>
		tc_tcd0_cca_callback = callback;
 afa:	60 93 1a 20 	sts	0x201A, r22
 afe:	70 93 1b 20 	sts	0x201B, r23
 b02:	08 95       	ret
	} else
#endif
#ifdef TCD1
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
 b04:	80 34       	cpi	r24, 0x40	; 64
 b06:	29 e0       	ldi	r18, 0x09	; 9
 b08:	92 07       	cpc	r25, r18
 b0a:	29 f4       	brne	.+10     	; 0xb16 <tc_set_cca_interrupt_callback+0x48>
		tc_tcd1_cca_callback = callback;
 b0c:	60 93 0e 20 	sts	0x200E, r22
 b10:	70 93 0f 20 	sts	0x200F, r23
 b14:	08 95       	ret
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
 b16:	81 15       	cp	r24, r1
 b18:	9a 40       	sbci	r25, 0x0A	; 10
 b1a:	21 f4       	brne	.+8      	; 0xb24 <tc_set_cca_interrupt_callback+0x56>
		tc_tce0_cca_callback = callback;
 b1c:	60 93 06 20 	sts	0x2006, r22
 b20:	70 93 07 20 	sts	0x2007, r23
 b24:	08 95       	ret

00000b26 <ccp_write_io>:

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
 b26:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
 b28:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
 b2a:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
 b2c:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
 b2e:	60 83       	st	Z, r22
	ret                             // Return to caller
 b30:	08 95       	ret

00000b32 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
 b32:	08 95       	ret

00000b34 <activar>:
	ancho[i]=a;
}

static void activar(void)
{
	tempo++;
 b34:	80 91 34 20 	lds	r24, 0x2034
 b38:	90 91 35 20 	lds	r25, 0x2035
 b3c:	01 96       	adiw	r24, 0x01	; 1
 b3e:	80 93 34 20 	sts	0x2034, r24
 b42:	90 93 35 20 	sts	0x2035, r25
	PORTR.OUTTGL=PIN0_bm;
 b46:	21 e0       	ldi	r18, 0x01	; 1
 b48:	e0 ee       	ldi	r30, 0xE0	; 224
 b4a:	f7 e0       	ldi	r31, 0x07	; 7
 b4c:	27 83       	std	Z+7, r18	; 0x07
	
	if (tempo==ancho[0])
 b4e:	20 91 3a 20 	lds	r18, 0x203A
 b52:	30 91 3b 20 	lds	r19, 0x203B
 b56:	82 17       	cp	r24, r18
 b58:	93 07       	cpc	r25, r19
 b5a:	21 f4       	brne	.+8      	; 0xb64 <activar+0x30>
	{
		PORTC.OUTCLR=PIN0_bm;
 b5c:	21 e0       	ldi	r18, 0x01	; 1
 b5e:	e0 e4       	ldi	r30, 0x40	; 64
 b60:	f6 e0       	ldi	r31, 0x06	; 6
 b62:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[1])
 b64:	20 91 3c 20 	lds	r18, 0x203C
 b68:	30 91 3d 20 	lds	r19, 0x203D
 b6c:	82 17       	cp	r24, r18
 b6e:	93 07       	cpc	r25, r19
 b70:	21 f4       	brne	.+8      	; 0xb7a <activar+0x46>
	{
		PORTC.OUTCLR=PIN1_bm;
 b72:	22 e0       	ldi	r18, 0x02	; 2
 b74:	e0 e4       	ldi	r30, 0x40	; 64
 b76:	f6 e0       	ldi	r31, 0x06	; 6
 b78:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[2])
 b7a:	20 91 3e 20 	lds	r18, 0x203E
 b7e:	30 91 3f 20 	lds	r19, 0x203F
 b82:	82 17       	cp	r24, r18
 b84:	93 07       	cpc	r25, r19
 b86:	21 f4       	brne	.+8      	; 0xb90 <activar+0x5c>
	{
		PORTC.OUTCLR=PIN2_bm;
 b88:	24 e0       	ldi	r18, 0x04	; 4
 b8a:	e0 e4       	ldi	r30, 0x40	; 64
 b8c:	f6 e0       	ldi	r31, 0x06	; 6
 b8e:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[3])
 b90:	20 91 40 20 	lds	r18, 0x2040
 b94:	30 91 41 20 	lds	r19, 0x2041
 b98:	82 17       	cp	r24, r18
 b9a:	93 07       	cpc	r25, r19
 b9c:	21 f4       	brne	.+8      	; 0xba6 <activar+0x72>
	{
		PORTC.OUTCLR=PIN3_bm;
 b9e:	28 e0       	ldi	r18, 0x08	; 8
 ba0:	e0 e4       	ldi	r30, 0x40	; 64
 ba2:	f6 e0       	ldi	r31, 0x06	; 6
 ba4:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[4])
 ba6:	20 91 42 20 	lds	r18, 0x2042
 baa:	30 91 43 20 	lds	r19, 0x2043
 bae:	82 17       	cp	r24, r18
 bb0:	93 07       	cpc	r25, r19
 bb2:	21 f4       	brne	.+8      	; 0xbbc <activar+0x88>
	{
		PORTC.OUTCLR=PIN4_bm;
 bb4:	20 e1       	ldi	r18, 0x10	; 16
 bb6:	e0 e4       	ldi	r30, 0x40	; 64
 bb8:	f6 e0       	ldi	r31, 0x06	; 6
 bba:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[5])
 bbc:	20 91 44 20 	lds	r18, 0x2044
 bc0:	30 91 45 20 	lds	r19, 0x2045
 bc4:	82 17       	cp	r24, r18
 bc6:	93 07       	cpc	r25, r19
 bc8:	21 f4       	brne	.+8      	; 0xbd2 <activar+0x9e>
	{
		PORTC.OUTCLR=PIN5_bm;
 bca:	20 e2       	ldi	r18, 0x20	; 32
 bcc:	e0 e4       	ldi	r30, 0x40	; 64
 bce:	f6 e0       	ldi	r31, 0x06	; 6
 bd0:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[6])
 bd2:	20 91 46 20 	lds	r18, 0x2046
 bd6:	30 91 47 20 	lds	r19, 0x2047
 bda:	82 17       	cp	r24, r18
 bdc:	93 07       	cpc	r25, r19
 bde:	21 f4       	brne	.+8      	; 0xbe8 <activar+0xb4>
	{
		PORTC.OUTCLR=PIN6_bm;
 be0:	20 e4       	ldi	r18, 0x40	; 64
 be2:	e0 e4       	ldi	r30, 0x40	; 64
 be4:	f6 e0       	ldi	r31, 0x06	; 6
 be6:	26 83       	std	Z+6, r18	; 0x06
	}
	if (tempo==ancho[7])
 be8:	20 91 48 20 	lds	r18, 0x2048
 bec:	30 91 49 20 	lds	r19, 0x2049
 bf0:	82 17       	cp	r24, r18
 bf2:	93 07       	cpc	r25, r19
 bf4:	21 f4       	brne	.+8      	; 0xbfe <activar+0xca>
	{
		PORTC.OUTCLR=PIN7_bm;
 bf6:	20 e8       	ldi	r18, 0x80	; 128
 bf8:	e0 e4       	ldi	r30, 0x40	; 64
 bfa:	f6 e0       	ldi	r31, 0x06	; 6
 bfc:	26 83       	std	Z+6, r18	; 0x06
	}							
	
	if (tempo==100)
 bfe:	84 36       	cpi	r24, 0x64	; 100
 c00:	91 05       	cpc	r25, r1
 c02:	51 f4       	brne	.+20     	; 0xc18 <activar+0xe4>
	{
		PORTC.OUT=255;
 c04:	8f ef       	ldi	r24, 0xFF	; 255
 c06:	e0 e4       	ldi	r30, 0x40	; 64
 c08:	f6 e0       	ldi	r31, 0x06	; 6
 c0a:	84 83       	std	Z+4, r24	; 0x04
			tempo=-1;
 c0c:	8f ef       	ldi	r24, 0xFF	; 255
 c0e:	9f ef       	ldi	r25, 0xFF	; 255
 c10:	80 93 34 20 	sts	0x2034, r24
 c14:	90 93 35 20 	sts	0x2035, r25
 c18:	08 95       	ret

00000c1a <main>:

int main (void)
{
	// Insert system clock initialization code here (sysclk_init()).

	board_init();
 c1a:	8b df       	rcall	.-234    	; 0xb32 <board_init>
	sysclk_init();
 c1c:	be da       	rcall	.-2692   	; 0x19a <sysclk_init>
 * Enables all interrupt levels, with vectors located in the application section
 * and fixed priority scheduling.
 */
static inline void pmic_init(void)
{
	PMIC.CTRL = PMIC_LVL_LOW | PMIC_LVL_MEDIUM |
 c1e:	87 e0       	ldi	r24, 0x07	; 7
 c20:	e0 ea       	ldi	r30, 0xA0	; 160
 c22:	f0 e0       	ldi	r31, 0x00	; 0
 c24:	82 83       	std	Z+2, r24	; 0x02
			tempo=-1;
	}
}
static void iniciar_timer_c0(void)
{
	tc_enable(&TCC0);
 c26:	80 e0       	ldi	r24, 0x00	; 0
 c28:	98 e0       	ldi	r25, 0x08	; 8
 c2a:	11 df       	rcall	.-478    	; 0xa4e <tc_enable>
	tc_set_cca_interrupt_callback(&TCC0, activar);
 c2c:	6a e9       	ldi	r22, 0x9A	; 154
 c2e:	75 e0       	ldi	r23, 0x05	; 5
 c30:	80 e0       	ldi	r24, 0x00	; 0
 c32:	98 e0       	ldi	r25, 0x08	; 8
 c34:	4c df       	rcall	.-360    	; 0xace <tc_set_cca_interrupt_callback>
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
 c36:	e0 e0       	ldi	r30, 0x00	; 0
 c38:	f8 e0       	ldi	r31, 0x08	; 8
 c3a:	81 81       	ldd	r24, Z+1	; 0x01
 c3c:	88 7f       	andi	r24, 0xF8	; 248
 c3e:	81 83       	std	Z+1, r24	; 0x01
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
 c40:	80 ec       	ldi	r24, 0xC0	; 192
 c42:	92 e1       	ldi	r25, 0x12	; 18
 c44:	86 a3       	std	Z+38, r24	; 0x26
 c46:	97 a3       	std	Z+39, r25	; 0x27
		enum tc_cc_channel_t channel_index, uint16_t value)
{
	if (tc_is_tc0(void *tc)) {
		switch (channel_index) {
		case TC_CCA:
			((TC0_t *)tc)->CCA = value;
 c48:	80 e3       	ldi	r24, 0x30	; 48
 c4a:	90 e0       	ldi	r25, 0x00	; 0
 c4c:	80 a7       	std	Z+40, r24	; 0x28
 c4e:	91 a7       	std	Z+41, r25	; 0x29
 */
static inline void tc_enable_cc_channels(volatile void *tc,
		enum tc_cc_channel_mask_enable_t enablemask)
{
	if (tc_is_tc0(void *tc)) {
		((TC0_t *)tc)->CTRLB |= enablemask;
 c50:	81 81       	ldd	r24, Z+1	; 0x01
 c52:	80 61       	ori	r24, 0x10	; 16
 c54:	81 83       	std	Z+1, r24	; 0x01
 * \note Configures CCAINTLVL in INTCTRLB
 */
static inline void tc_set_cca_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLB = ((TC0_t *)tc)->INTCTRLB & ~TC0_CCAINTLVL_gm;
 c56:	87 81       	ldd	r24, Z+7	; 0x07
 c58:	8c 7f       	andi	r24, 0xFC	; 252
 c5a:	87 83       	std	Z+7, r24	; 0x07
	((TC0_t *)tc)->INTCTRLB =
			((TC0_t *)tc)->INTCTRLB | (level << TC0_CCAINTLVL_gp);
 c5c:	87 81       	ldd	r24, Z+7	; 0x07
 */
static inline void tc_set_cca_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLB = ((TC0_t *)tc)->INTCTRLB & ~TC0_CCAINTLVL_gm;
	((TC0_t *)tc)->INTCTRLB =
 c5e:	83 60       	ori	r24, 0x03	; 3
 c60:	87 83       	std	Z+7, r24	; 0x07
	tc_set_wgm(&TCC0, TC_WG_NORMAL);
	tc_write_period(&TCC0,4800); //para frecuencia de 1k necsita dar 32000ciclos	
	tc_write_cc(&TCC0,TC_CCA,48);
	tc_enable_cc_channels(&TCC0,TC_CCAEN);
	tc_set_cca_interrupt_level(&TCC0, TC_INT_LVL_HI);
	sei();
 c62:	78 94       	sei
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
 c64:	80 81       	ld	r24, Z
 * \note Configuring the clock also starts the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
 c66:	80 7f       	andi	r24, 0xF0	; 240
 c68:	81 60       	ori	r24, 0x01	; 1
 c6a:	80 83       	st	Z, r24
	board_init();
	sysclk_init();
	pmic_init();
	iniciar_timer_c0();
	
	PORTC.DIR=255;
 c6c:	8f ef       	ldi	r24, 0xFF	; 255
 c6e:	80 93 40 06 	sts	0x0640, r24
	PORTR.DIRSET=PIN0_bm;
 c72:	81 e0       	ldi	r24, 0x01	; 1
 c74:	e0 ee       	ldi	r30, 0xE0	; 224
 c76:	f7 e0       	ldi	r31, 0x07	; 7
 c78:	81 83       	std	Z+1, r24	; 0x01
int pot;
uint16_t tempo;

static void dutty(int i, uint16_t a)
{
	ancho[i]=a;
 c7a:	84 e6       	ldi	r24, 0x64	; 100
 c7c:	90 e0       	ldi	r25, 0x00	; 0
 c7e:	80 93 3a 20 	sts	0x203A, r24
 c82:	90 93 3b 20 	sts	0x203B, r25
 c86:	8a e0       	ldi	r24, 0x0A	; 10
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	80 93 3c 20 	sts	0x203C, r24
 c8e:	90 93 3d 20 	sts	0x203D, r25
 c92:	84 e1       	ldi	r24, 0x14	; 20
 c94:	90 e0       	ldi	r25, 0x00	; 0
 c96:	80 93 3e 20 	sts	0x203E, r24
 c9a:	90 93 3f 20 	sts	0x203F, r25
 c9e:	8e e1       	ldi	r24, 0x1E	; 30
 ca0:	90 e0       	ldi	r25, 0x00	; 0
 ca2:	80 93 40 20 	sts	0x2040, r24
 ca6:	90 93 41 20 	sts	0x2041, r25
 caa:	88 e2       	ldi	r24, 0x28	; 40
 cac:	90 e0       	ldi	r25, 0x00	; 0
 cae:	80 93 42 20 	sts	0x2042, r24
 cb2:	90 93 43 20 	sts	0x2043, r25
 cb6:	82 e3       	ldi	r24, 0x32	; 50
 cb8:	90 e0       	ldi	r25, 0x00	; 0
 cba:	80 93 44 20 	sts	0x2044, r24
 cbe:	90 93 45 20 	sts	0x2045, r25
 cc2:	8c e3       	ldi	r24, 0x3C	; 60
 cc4:	90 e0       	ldi	r25, 0x00	; 0
 cc6:	80 93 46 20 	sts	0x2046, r24
 cca:	90 93 47 20 	sts	0x2047, r25
 cce:	10 92 48 20 	sts	0x2048, r1
 cd2:	10 92 49 20 	sts	0x2049, r1
 cd6:	ff cf       	rjmp	.-2      	; 0xcd6 <main+0xbc>

00000cd8 <_exit>:
 cd8:	f8 94       	cli

00000cda <__stop_program>:
 cda:	ff cf       	rjmp	.-2      	; 0xcda <__stop_program>
